{"version":3,"file":"index.js","sources":["../src/neckstimate/with-breasts.js","../src/neckstimate/without-breasts.js","../src/neckstimate/ratio.js","../src/neckstimate/index.js"],"sourcesContent":["/*\r\n * These are a set of measurements of an average-sized woman.\r\n * We simply extrapolate for other sizes (based on neckCircumference)\r\n * by keeping the same proportions.\r\n * That is almost certainly not the best sizing table you can get,\r\n * but we are not in the business of standard sizes, so this will do.\r\n */\r\n\r\nexport default {\r\n  ankleCircumference: 245,\r\n  bicepsCircumference: 270,\r\n  bustFront: 480,\r\n  bustSpan: 160,\r\n  chestCircumference: 925,\r\n  headCircumference: 565,\r\n  highBust: 865,\r\n  highBustFront: 440,\r\n  hipsCircumference: 900,\r\n  hipsToUpperLeg: 165,\r\n  hpsToBust: 275,\r\n  hpsToHipsBack: 520,\r\n  hpsToHipsFront: 525,\r\n  inseam: 765,\r\n  kneeCircumference: 380,\r\n  naturalWaist: 750,\r\n  naturalWaistToFloor: 1050,\r\n  naturalWaistToHip: 125,\r\n  naturalWaistToKnee: 600,\r\n  naturalWaistToSeat: 250,\r\n  naturalWaistToUnderbust: 80,\r\n  neckCircumference: 340,\r\n  seatCircumference: 1010,\r\n  seatDepth: 165,\r\n  shoulderSlope: 520,\r\n  shoulderToElbow: 340,\r\n  shoulderToShoulder: 415,\r\n  shoulderToWrist: 590,\r\n  underbust: 780,\r\n  upperLegCircumference: 570,\r\n  wristCircumference: 165\r\n}\r\n","/*\r\n * These are a set of measurements of an average-sized man.\r\n * We simply extrapolate for other sizes (based on neckCircumference)\r\n * by keeping the same proportions.\r\n * That is almost certainly not the best sizing table you can get,\r\n * but we are not in the business of standard sizes, so this will do.\r\n */\r\nexport default {\r\n  ankleCircumference: 235,\r\n  bicepsCircumference: 350,\r\n  chestCircumference: 1000,\r\n  headCircumference: 590,\r\n  hipsCircumference: 840,\r\n  hipsToUpperLeg: 210,\r\n  hpsToBust: 280,\r\n  hpsToHipsBack: 600,\r\n  inseam: 780,\r\n  kneeCircumference: 410,\r\n  naturalWaist: 810,\r\n  naturalWaistToFloor: 1160,\r\n  naturalWaistToHip: 130,\r\n  naturalWaistToKnee: 640,\r\n  naturalWaistToSeat: 270,\r\n  neckCircumference: 380,\r\n  seatCircumference: 1020,\r\n  seatDepth: 210,\r\n  shoulderSlope: 595,\r\n  shoulderToElbow: 360,\r\n  shoulderToShoulder: 450,\r\n  shoulderToWrist: 630,\r\n  upperLegCircumference: 625,\r\n  wristCircumference: 175\r\n}\r\n","/*\r\n * Since linear measurements don't scale the same as circumference\r\n * measurements, we apply a correction ratio.\r\n */\r\n\r\nexport default {\r\n  ankleCircumference: 1,\r\n  bicepsCircumference: 1,\r\n  bustFront: 0.5,\r\n  bustSpan: 0.5,\r\n  chestCircumference: 1,\r\n  headCircumference: 1,\r\n  highBust: 1,\r\n  highBustFront: 0.5,\r\n  hipsCircumference: 1,\r\n  hipsToUpperLeg: 0.5,\r\n  hpsToBust: 0.5,\r\n  hpsToHipsBack: 0.5,\r\n  hpsToHipsFront: 0.5,\r\n  inseam: 0.5,\r\n  kneeCircumference: 1,\r\n  naturalWaist: 1,\r\n  naturalWaistToFloor: 0.5,\r\n  naturalWaistToHip: 0.5,\r\n  naturalWaistToKnee: 0.5,\r\n  naturalWaistToSeat: 0.5,\r\n  naturalWaistToUnderbust: 0.5,\r\n  neckCircumference: 1,\r\n  seatCircumference: 1,\r\n  seatDepth: 0.5,\r\n  shoulderSlope: 0.5,\r\n  shoulderToElbow: 0.5,\r\n  shoulderToShoulder: 0.5,\r\n  shoulderToWrist: 0.5,\r\n  underbust: 1,\r\n  upperLegCircumference: 1,\r\n  wristCircumference: 1\r\n}\r\n","import withBreasts from './with-breasts'\r\nimport withoutBreasts from './without-breasts'\r\nimport ratio from './ratio'\r\n\r\n// This estimates a measurement based on the neck circumference\r\nconst neckstimate = (neckCircumference = false, measurement = false, breasts = false) => {\r\n  let data = breasts ? withBreasts : withoutBreasts\r\n\r\n  if (!neckCircumference)\r\n    throw new Error('neckstimate() requires a neck circumference in mm as first parameter')\r\n  if (!measurement) {\r\n    // No measurement passed\r\n    throw new Error(\r\n      'new neckstimate() requires a valid measurement name as second parameter. (received ' +\r\n        JSON.stringify(measurement) +\r\n        ')'\r\n    )\r\n  }\r\n  if (typeof data[measurement] === 'undefined') {\r\n    if (typeof withBreasts[measurement] === 'undefined') {\r\n      throw new Error(`neckstimate() called with an invalid measurement name (${measurement})`)\r\n    } else {\r\n      console.log(\r\n        `WARNING: neckstimate() called for a breasts-only measurement (${measurement}) on a no-breasts person`\r\n      )\r\n      // Return something anyway, rather than fall over\r\n      data = withBreasts\r\n    }\r\n  }\r\n\r\n  // This is what should happen\r\n  let delta = (neckCircumference / data.neckCircumference) * data[measurement] - data[measurement]\r\n\r\n  return Math.round(data[measurement] + delta * ratio[measurement])\r\n}\r\n\r\nexport default neckstimate\r\n"],"names":["ankleCircumference","bicepsCircumference","bustFront","bustSpan","chestCircumference","headCircumference","highBust","highBustFront","hipsCircumference","hipsToUpperLeg","hpsToBust","hpsToHipsBack","hpsToHipsFront","inseam","kneeCircumference","naturalWaist","naturalWaistToFloor","naturalWaistToHip","naturalWaistToKnee","naturalWaistToSeat","naturalWaistToUnderbust","neckCircumference","seatCircumference","seatDepth","shoulderSlope","shoulderToElbow","shoulderToShoulder","shoulderToWrist","underbust","upperLegCircumference","wristCircumference","neckstimate","measurement","breasts","data","withBreasts","withoutBreasts","Error","JSON","stringify","console","log","delta","Math","round","ratio"],"mappings":"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"}