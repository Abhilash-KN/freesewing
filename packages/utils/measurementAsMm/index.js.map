{"version":3,"file":"index.js","sources":["../src/measurementAsMm/index.js"],"sourcesContent":["const measurementAsMm = (value, units = \"metric\") => {\r\n  if (typeof value === \"number\")\r\n    return value * (units === \"imperial\" ? 25.4 : 10);\r\n  if (units === \"metric\") {\r\n    value = Number(value);\r\n    if (isNaN(value)) return false;\r\n    return value * 10;\r\n  } else {\r\n    const imperialFractionToMm = value => {\r\n      let chunks = value.trim().split(\"/\");\r\n      if (chunks.length !== 2 || chunks[1] === \"\") return false;\r\n      let num = Number(chunks[0]);\r\n      let denom = Number(chunks[1]);\r\n      if (isNaN(num) || isNaN(denom)) return false;\r\n      else return (num * 25.4) / denom;\r\n    };\r\n    let chunks = value.split(\" \");\r\n    if (chunks.length === 1) {\r\n      let val = chunks[0];\r\n      if (!isNaN(Number(val))) return Number(val) * 25.4;\r\n      else return imperialFractionToMm(val);\r\n    } else if (chunks.length === 2) {\r\n      let inches = Number(chunks[0]);\r\n      if (isNaN(inches)) return false;\r\n      let fraction = imperialFractionToMm(chunks[1]);\r\n      if (fraction === false) return false;\r\n      return inches * 25.4 + fraction;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default measurementAsMm;\r\n"],"names":["measurementAsMm","value","units","isNaN","imperialFractionToMm","chunks","trim","split","length","num","denom","val","Number","inches","fraction"],"mappings":";;;;;gBAAA,KAAMA,CAAAA,eAAe,CAAG,CAACC,CAAD,CAAQC,CAAK,CAAG,QAAhB,GAA6B,IAC9B,QAAjB,QAAOD,CAAAA,EACT,MAAOA,CAAAA,CAAK,EAAc,UAAVC,GAAAA,CAAK,CAAkB,IAAlB,CAAyB,EAAlC,CAAZ,IACY,QAAVA,GAAAA,QACFD,CAAAA,CAAK,EAAUA,GACXE,KAAK,CAACF,CAAD,GACM,EAARA,CAAAA,MACF,MACCG,CAAAA,CAAoB,CAAGH,CAAK,EAAI,IAChCI,CAAAA,CAAM,CAAGJ,CAAK,CAACK,IAANL,GAAaM,KAAbN,CAAmB,GAAnBA,KACS,CAAlBI,GAAAA,CAAM,CAACG,MAAPH,EAAqC,EAAdA,GAAAA,CAAM,CAAC,CAAD,EAAY,SAFT,GAGhCI,CAAAA,CAAG,EAAUJ,CAAM,CAAC,CAAD,CAHa,CAIhCK,CAAK,EAAUL,CAAM,CAAC,CAAD,CAJW,SAKhCF,KAAK,CAACM,CAAD,CAALN,EAAcA,KAAK,CAACO,CAAD,CALa,GAMjB,IAAND,CAAAA,CAAG,CAAWC,CAN7B,KAQIL,CAAAA,CAAM,CAAGJ,CAAK,CAACM,KAANN,CAAY,GAAZA,KACS,CAAlBI,GAAAA,CAAM,CAACG,OAAc,IACnBG,CAAAA,CAAG,CAAGN,CAAM,CAAC,CAAD,EADO,MAElBF,CAAAA,KAAK,EAAQQ,CAAR,CAFa,CAGXP,CAAoB,CAACO,CAAD,CAHT,CAEuB,IAAdC,EAAOD,CAFzC,CAIO,GAAsB,CAAlBN,GAAAA,CAAM,CAACG,MAAX,CAAyB,IAC1BK,CAAAA,CAAM,EAAUR,CAAM,CAAC,CAAD,KACtBF,KAAK,CAACU,CAAD,EAAU,YACfC,CAAAA,CAAQ,CAAGV,CAAoB,CAACC,CAAM,CAAC,CAAD,CAAP,EAHL,MAI1BS,KAAAA,CAJ0B,EAKd,IAATD,CAAAA,CAAM,CAAUC,WA1B7B,CAAA"}