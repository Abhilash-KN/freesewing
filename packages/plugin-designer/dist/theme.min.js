/**
 * @freesewing/theme-designer | The designer theme for freesewing
 * (c) 2018 Joost De Cock <joost@decock.org> (https://github.com/joostdecock)
 * @license MIT
 */
!(function() {
  "use strict";
  var t = "0.2.2";
  module.exports = {
    preRenderSvg: function(e) {
      (this.style +=
        "\npath.curve-control{stroke:#f0ad4e;stroke-width: 0.2;}\npath.debug{stroke:#d9534f;stroke-opacity:0.4;stroke-width:2;}\n.point{fill:none;stroke-width:0.6;stroke:#f0ad4e;}\ntext.tooltip{font-size:3px;}\n"),
        (this.script +=
          "\nfunction pointHover(evt) {\n  var point = evt.target;\n  var id = point.id;\n  var cx = point.getAttribute('x');\n  var cy = point.getAttribute('y');\n  console.log('Point '+id+' ( '+cx+' , '+cy+' )');\n  var scale = 2;\n  cx = cx-scale*cx;\n  cy = cy-scale*cy;\n  point.setAttribute(\"transform\", 'matrix('+scale+', 0, 0, '+scale+', '+cx+', '+cy+')');\n  setTimeout(function(){\n    var point = document.getElementById(evt.target.id);\n    point.removeAttribute(\"transform\", '');\n  }, 1000);\n}\n"),
        (this.defs +=
          '\n<g id="point">\n  <circle cy="0" cx="0" r="2" class="stroke-hint stroke-sm" />\n  <circle cy="0" cx="0" r="0.8" class="fill-hint" />\n</g>\n<g id="point-hidden">\n  <circle cy="0" cx="0" r="1" class="stroke-canvas stroke-xs" />\n  <path d="M -0.5,-0.5 L 0.5,0.5 M 0.5,-0.5 L -0.5,0.5" class="stroke-canvas stroke-sm" />\n</g>\n<g id="path-move-point">\n  <circle cx="0" cy="0" r="2"  class="stroke-canvas stroke-lg" />\n  <circle cx="0" cy="0" r="0.8" class="fill-canvas" />\n</g>\n<g id="path-line-point">\n  <circle cx="0" cy="0" r="2"  class="stroke-note stroke-lg" />\n  <circle cx="0" cy="0" r="0.8" class="fill-note" />\n</g>\n<g id="path-curve-point"> <use xlink:href = "#path-line-point"/> </g>\n<g id="path-handle-point">\n  <circle cy="0" cx="0" r="2" class="stroke-mark stroke-lg no-fill" />\n  <circle cx="0" cy="0" r="0.8" class="fill-mark" />\n</g>\n<g id="point-focus">\n  <circle cx="0" cy="0" r="2"  class="stroke-mark stroke-lg" />\n  <circle cx="0" cy="0" r="0.8" class="fill-fabric" />\n</g>\n<g id="marked-point">\n  <circle cx="0" cy="0" r="3.6"  class="stroke-hint stroke-sm" />\n  <circle cx="0" cy="0" r="2.8"  class="stroke-hint stroke-sm" />\n  <circle cx="0" cy="0" r="2.0"  class="stroke-hint stroke-sm" />\n  <circle cx="0" cy="0" r="1.2"  class="stroke-hint stroke-sm" />\n  <circle cx="0" cy="0" r="0.8"  class="stroke-hint stroke-sm" />\n  <circle cx="0" cy="0" r="0.4" class="fill-hint" />\n</g>\n'),
        this.attributes.add(
          "xmlns:freesewing",
          "http://freesewing.org/namespaces/freesewing"
        ),
        this.attributes.add("freesewing:theme-designer", t);
      var n = function(t, e, n, s, i, r, a) {
          (n[t] = new e(s, `path-${i}-point`, `Path ${r}: ${i}`)),
            n[t].attributes.add("onmouseover", "pointHover(evt)"),
            n[t].attributes.add("id", t),
            n[t].attributes.add("data-point", s.attributes.get("data-point")),
            n[t].attributes.add("data-path", r),
            n[t].attributes.add("data-part", a);
        },
        s = function(t, e, n, s, i, r, a) {
          let c = new e().move(s).line(i);
          c.attributes.add("class", "curve-control"),
            c.attributes.add("id", t),
            c.attributes.add("data-path", r),
            c.attributes.add("data-part", a),
            (n[t] = c);
        };
      !(function(t) {
        for (let e in t.pattern.parts) {
          let n = t.pattern.parts[e];
          if (n.render)
            for (let s in n.points) {
              let i = n.points[s];
              i.attributes.add("id", t.getUid()),
                i.attributes.add("data-point", s),
                i.attributes.add("data-part", e);
              let r = "_" === s.substr(0, 1) ? "point-hidden" : "point",
                a = t.getUid();
              (n.snippets[a] = new t.pattern.snippet(
                i,
                r,
                `Point ${s} in part ${e}`
              )),
                n.snippets[a].attributes.add("onmouseover", "pointHover(evt)"),
                n.snippets[a].attributes.add("id", a),
                n.snippets[a].attributes.add("data-point", s),
                n.snippets[a].attributes.add("data-part", e);
            }
        }
      })(this),
        (function(t) {
          for (let e in t.pattern.parts) {
            let i = t.pattern.parts[e];
            if (i.render)
              for (let r in i.paths) {
                let a = i.paths[r];
                if (!a.render) return !1;
                for (let c of a.ops) {
                  "close" !== c.type &&
                    n(
                      t.getUid(),
                      t.pattern.snippet,
                      i.snippets,
                      c.to,
                      c.type,
                      r,
                      e
                    ),
                    "curve" === c.type &&
                      (n(
                        t.getUid(),
                        t.pattern.snippet,
                        i.snippets,
                        c.cp1,
                        "handle",
                        r,
                        e
                      ),
                      n(
                        t.getUid(),
                        t.pattern.snippet,
                        i.snippets,
                        c.cp2,
                        "handle",
                        r,
                        e
                      ),
                      s(t.getUid(), t.pattern.path, i.paths, a, c.cp1, r, e),
                      s(
                        t.getUid(),
                        t.pattern.path,
                        i.paths,
                        c.to,
                        c.cp2,
                        r,
                        e
                      ));
                  let a = c.to;
                }
              }
          }
        })(this),
        console.log(
          "Designer theme plugin: Here's the pattern object:",
          this.pattern
        ),
        e();
    }
  };
})();
