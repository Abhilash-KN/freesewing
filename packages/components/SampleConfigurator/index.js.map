{"version":3,"file":"index.js","sources":["../src/SampleConfigurator/OptionGroup/index.js","../src/SampleConfigurator/PatternOptions/index.js","../src/SampleConfigurator/index.js"],"sourcesContent":["import React from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst OptionGroup = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.options.map((name) => {\r\n        let output = []\r\n        if (typeof name === 'object') {\r\n          // Subgroup\r\n          for (let subGroup of Object.keys(name)) {\r\n            output.push(\r\n              <h5 key={subGroup + '-title'} className=\"subheading\">\r\n                <FormattedMessage id={'optiongroups.' + subGroup} />\r\n              </h5>\r\n            )\r\n            let children = []\r\n            for (let option of name[subGroup])\r\n              children.push(\r\n                <li>\r\n                  <a href=\"#logo\" onClick={() => props.sampleOption(option)}>\r\n                    <FormattedMessage\r\n                      id={'options.' + props.config.name + '.' + option + '.title'}\r\n                    />\r\n                  </a>\r\n                </li>\r\n              )\r\n            output.push(<ul style={{ paddingLeft: '1rem' }}>{children}</ul>)\r\n          }\r\n        } else\r\n          output.push(\r\n            <li>\r\n              <a href=\"#logo\" onClick={() => props.sampleOption(name)}>\r\n                <FormattedMessage id={'options.' + props.config.name + '.' + name + '.title'} />\r\n              </a>\r\n            </li>\r\n          )\r\n\r\n        return output\r\n      })}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default injectIntl(OptionGroup)\r\n","import React from 'react'\r\nimport OptionGroup from '../OptionGroup'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst PatternOptions = (props) => {\r\n  const renderGroup = (group) => {\r\n    let output = []\r\n    let children = (\r\n      <ul className=\"links\">\r\n        <OptionGroup\r\n          key={group + '-group'}\r\n          units={props.units}\r\n          config={props.config}\r\n          options={props.config.optionGroups[group]}\r\n          sampleOption={props.sampleOption}\r\n        />\r\n      </ul>\r\n    )\r\n    output.push(\r\n      <li key={group + '-ghead'} className=\"nodot\">\r\n        <h3>\r\n          <FormattedMessage id={'optiongroups.' + group} />\r\n        </h3>\r\n        {children}\r\n      </li>\r\n    )\r\n\r\n    return output\r\n  }\r\n\r\n  return (\r\n    <ul className=\"links\">\r\n      {Object.keys(props.config.optionGroups).map((group) => renderGroup(group))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default PatternOptions\r\n","import React, { useState } from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport PatternOptions from './PatternOptions'\r\nimport { withBreasts, withoutBreasts } from '@freesewing/models'\r\n\r\nconst SampleConfigurator = props => {\r\n  const [expanded, setExpanded] = useState([])\r\n\r\n  const sampleOption = option => {\r\n    props.updateGist(\r\n      {\r\n        type: 'option',\r\n        option\r\n      },\r\n      'settings',\r\n      'sample'\r\n    )\r\n  }\r\n\r\n  const sampleMeasurement = measurement => {\r\n    props.updateGist(\r\n      {\r\n        type: 'measurement',\r\n        measurement\r\n      },\r\n      'settings',\r\n      'sample'\r\n    )\r\n  }\r\n\r\n  const sampleModels = models => {\r\n    props.updateGist(\r\n      {\r\n        type: 'models',\r\n        models\r\n      },\r\n      'settings',\r\n      'sample'\r\n    )\r\n  }\r\n  let antMan = {\r\n    ant: {},\r\n    man: withoutBreasts.manSize42\r\n  }\r\n  for (let m in withoutBreasts.manSize42) antMan.ant[m] = antMan.man[m] / 10\r\n\r\n  return (\r\n    <ul className=\"links\">\r\n      <li className=\"nodot\">\r\n        <h4>\r\n          <FormattedMessage id=\"app.patternOptions\" />\r\n        </h4>\r\n        <PatternOptions config={props.config} gist={props.gist} sampleOption={sampleOption} />\r\n      </li>\r\n      <li className=\"nodot\">\r\n        <h4>\r\n          <FormattedMessage id=\"app.measurements\" />\r\n        </h4>\r\n        <ul style={{ paddingLeft: '1rem' }}>\r\n          {props.config.measurements.map(m => (\r\n            <li key={m}>\r\n              <a href=\"#logo\" onClick={() => sampleMeasurement(m)}>\r\n                <FormattedMessage id={'measurements.' + m} />\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </li>\r\n      <li className=\"nodot\">\r\n        <h4>\r\n          <FormattedMessage id=\"app.models\" />\r\n        </h4>\r\n        <ul style={{ paddingLeft: '1rem' }}>\r\n          <li>\r\n            <a href=\"#logo\" onClick={() => sampleModels(withBreasts)}>\r\n              <FormattedMessage id=\"app.withBreasts\" />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#logo\" onClick={() => sampleModels(withoutBreasts)}>\r\n              <FormattedMessage id=\"app.withoutBreasts\" />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#logo\" onClick={() => sampleModels(antMan)}>\r\n              Antman\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SampleConfigurator\r\n"],"names":["OptionGroup","props","React","Fragment","options","map","name","output","_typeof","subGroup","Object","keys","push","key","className","FormattedMessage","id","children","option","href","onClick","sampleOption","config","style","paddingLeft","injectIntl","PatternOptions","renderGroup","group","units","optionGroups","SampleConfigurator","useState","expanded","setExpanded","sampleMeasurement","measurement","updateGist","type","sampleModels","models","antMan","ant","man","withoutBreasts","manSize42","m","gist","measurements","withBreasts"],"mappings":"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"}